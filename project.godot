; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Expr",
"class": "AstPrinter",
"language": "GDScript",
"path": "res://tool/ast/AstPrinter.gd"
}, {
"base": "Expr",
"class": "Binary",
"language": "GDScript",
"path": "res://core/expr/Binary.gd"
}, {
"base": "Reference",
"class": "Expr",
"language": "GDScript",
"path": "res://core/expr/Expr.gd"
}, {
"base": "Stmt",
"class": "Expresion",
"language": "GDScript",
"path": "res://core/stmt/Expresion.gd"
}, {
"base": "Reference",
"class": "FileInfo",
"language": "GDScript",
"path": "res://util/FileInfo.gd"
}, {
"base": "Expr",
"class": "Grouping",
"language": "GDScript",
"path": "res://core/expr/Grouping.gd"
}, {
"base": "Node",
"class": "IOUtil",
"language": "GDScript",
"path": "res://util/IOUnit.gd"
}, {
"base": "Reference",
"class": "Interpreter",
"language": "GDScript",
"path": "res://core/Interpreter.gd"
}, {
"base": "Reference",
"class": "Lexer",
"language": "GDScript",
"path": "res://core/Lexer.gd"
}, {
"base": "Reference",
"class": "LexerAction",
"language": "GDScript",
"path": "res://core/LexerAction.gd"
}, {
"base": "Expr",
"class": "Literal",
"language": "GDScript",
"path": "res://core/expr/Literal.gd"
}, {
"base": "Reference",
"class": "Parser",
"language": "GDScript",
"path": "res://core/Parser.gd"
}, {
"base": "Stmt",
"class": "Print",
"language": "GDScript",
"path": "res://core/stmt/Print.gd"
}, {
"base": "Reference",
"class": "Stmt",
"language": "GDScript",
"path": "res://core/stmt/Stmt.gd"
}, {
"base": "Reference",
"class": "Token",
"language": "GDScript",
"path": "res://core/Token.gd"
}, {
"base": "Expr",
"class": "Unary",
"language": "GDScript",
"path": "res://core/expr/Unary.gd"
} ]
_global_script_class_icons={
"AstPrinter": "",
"Binary": "",
"Expr": "",
"Expresion": "",
"FileInfo": "",
"Grouping": "",
"IOUtil": "",
"Interpreter": "",
"Lexer": "",
"LexerAction": "",
"Literal": "",
"Parser": "",
"Print": "",
"Stmt": "",
"Token": "",
"Unary": ""
}

[application]

config/name="Golox"
run/main_scene="res://scene/Main.tscn"
config/icon="res://icon.png"

[autoload]

ErrorHandler="*res://autoload/ErrorHandler.gd"
u="*res://autoload/Util.gd"
TokenType="*res://autoload/TokenType.gd"
Tester="*res://autoload/Tester.gd"

[rendering]

environment/default_environment="res://default_env.tres"
