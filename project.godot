; Engine configuration file.
; It's best edited using the editor UI and not directly,
; since the parameters that go here are not all obvious.
;
; Format:
;   [section] ; section goes between []
;   param=value ; assign values to parameters

config_version=4

_global_script_classes=[ {
"base": "Expr",
"class": "Assign",
"language": "GDScript",
"path": "res://core/expr/Assign.gd"
}, {
"base": "Expr",
"class": "AstPrinter",
"language": "GDScript",
"path": "res://tool/ast/AstPrinter.gd"
}, {
"base": "Expr",
"class": "Binary",
"language": "GDScript",
"path": "res://core/expr/Binary.gd"
}, {
"base": "Stmt",
"class": "Block",
"language": "GDScript",
"path": "res://core/stmt/Block.gd"
}, {
"base": "GDBuilder",
"class": "ClassBuilder",
"language": "GDScript",
"path": "res://tool/gdsMaker/ClassBuilder.gd"
}, {
"base": "Reference",
"class": "EnvironmentLox",
"language": "GDScript",
"path": "res://core/EnvironmentLox.gd"
}, {
"base": "Reference",
"class": "Expr",
"language": "GDScript",
"path": "res://core/expr/Expr.gd"
}, {
"base": "Stmt",
"class": "ExpressionL",
"language": "GDScript",
"path": "res://core/stmt/ExpressionL.gd"
}, {
"base": "GDBuilder",
"class": "FileBuilder",
"language": "GDScript",
"path": "res://tool/gdsMaker/FileBuilder.gd"
}, {
"base": "Reference",
"class": "FileInfo",
"language": "GDScript",
"path": "res://util/FileInfo.gd"
}, {
"base": "GDBuilder",
"class": "FuncBuilder",
"language": "GDScript",
"path": "res://tool/gdsMaker/FuncBuilder.gd"
}, {
"base": "Reference",
"class": "GDBuilder",
"language": "GDScript",
"path": "res://tool/gdsMaker/GDBuilder.gd"
}, {
"base": "Expr",
"class": "Grouping",
"language": "GDScript",
"path": "res://core/expr/Grouping.gd"
}, {
"base": "Node",
"class": "IOUtil",
"language": "GDScript",
"path": "res://util/IOUnit.gd"
}, {
"base": "Stmt",
"class": "If",
"language": "GDScript",
"path": "res://core/stmt/If.gd"
}, {
"base": "Reference",
"class": "Interpreter",
"language": "GDScript",
"path": "res://core/Interpreter.gd"
}, {
"base": "Node",
"class": "LexerAction",
"language": "GDScript",
"path": "res://core/lexer/action/basicAction.gd"
}, {
"base": "Reference",
"class": "LexerBase",
"language": "GDScript",
"path": "res://core/lexer/LexerBase.gd"
}, {
"base": "LexerBase",
"class": "LexerGen",
"language": "GDScript",
"path": "res://tool/grammerMake/LexerGen.gd"
}, {
"base": "LexerBase",
"class": "LexerLox",
"language": "GDScript",
"path": "res://core/lexer/LexerShop.gd"
}, {
"base": "LexerBase",
"class": "LexerShop",
"language": "GDScript",
"path": "res://core/lexer/LexerLox.gd"
}, {
"base": "GDBuilder",
"class": "LineBuilder",
"language": "GDScript",
"path": "res://tool/gdsMaker/LineBuilder.gd"
}, {
"base": "Expr",
"class": "Literal",
"language": "GDScript",
"path": "res://core/expr/Literal.gd"
}, {
"base": "Expr",
"class": "Logical",
"language": "GDScript",
"path": "res://core/expr/Logical.gd"
}, {
"base": "Reference",
"class": "ParserBase",
"language": "GDScript",
"path": "res://core/parser/ParserBase.gd"
}, {
"base": "ParserBase",
"class": "ParserGen",
"language": "GDScript",
"path": "res://tool/grammerMake/ParserGen.gd"
}, {
"base": "ParserBase",
"class": "ParserLox",
"language": "GDScript",
"path": "res://core/parser/ParserLox.gd"
}, {
"base": "Stmt",
"class": "Print",
"language": "GDScript",
"path": "res://core/stmt/Print.gd"
}, {
"base": "GDBuilder",
"class": "SetVarBuilder",
"language": "GDScript",
"path": "res://tool/gdsMaker/SetVarBuilder.gd"
}, {
"base": "Reference",
"class": "Stmt",
"language": "GDScript",
"path": "res://core/stmt/Stmt.gd"
}, {
"base": "Reference",
"class": "TextWriter",
"language": "GDScript",
"path": "res://tool/gdsMaker/TextWriter.gd"
}, {
"base": "Reference",
"class": "Token",
"language": "GDScript",
"path": "res://core/Token.gd"
}, {
"base": "Expr",
"class": "Unary",
"language": "GDScript",
"path": "res://core/expr/Unary.gd"
}, {
"base": "Stmt",
"class": "Var",
"language": "GDScript",
"path": "res://core/stmt/Var.gd"
}, {
"base": "GDBuilder",
"class": "VarBuilder",
"language": "GDScript",
"path": "res://tool/gdsMaker/VarBuilder.gd"
}, {
"base": "Expr",
"class": "Variable",
"language": "GDScript",
"path": "res://core/expr/Variable.gd"
}, {
"base": "Stmt",
"class": "While",
"language": "GDScript",
"path": "res://core/stmt/While.gd"
} ]
_global_script_class_icons={
"Assign": "",
"AstPrinter": "",
"Binary": "",
"Block": "",
"ClassBuilder": "",
"EnvironmentLox": "",
"Expr": "",
"ExpressionL": "",
"FileBuilder": "",
"FileInfo": "",
"FuncBuilder": "",
"GDBuilder": "",
"Grouping": "",
"IOUtil": "",
"If": "",
"Interpreter": "",
"LexerAction": "",
"LexerBase": "",
"LexerGen": "",
"LexerLox": "",
"LexerShop": "",
"LineBuilder": "",
"Literal": "",
"Logical": "",
"ParserBase": "",
"ParserGen": "",
"ParserLox": "",
"Print": "",
"SetVarBuilder": "",
"Stmt": "",
"TextWriter": "",
"Token": "",
"Unary": "",
"Var": "",
"VarBuilder": "",
"Variable": "",
"While": ""
}

[WAT]

Test_Directory="res://tests"
Results_Directory="res://tests/results/WAT"
Minimize_Window_When_Running_Tests=false
TestStrategy={
"repeat": 1,
"strategy": "RunAll"
}
Tags=PoolStringArray(  )
Display=8

[application]

config/name="Golox"
run/main_scene="res://scene/Main.tscn"
config/icon="res://icon.png"

[autoload]

ErrorHandler="*res://autoload/ErrorHandler.gd"
u="*res://autoload/Util.gd"
TokenType="*res://autoload/TokenType.gd"
Tester="*res://autoload/Tester.gd"

[editor_plugins]

enabled=PoolStringArray(  )

[rendering]

environment/default_environment="res://default_env.tres"
